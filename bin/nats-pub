#!/usr/bin/env ruby
# Copyright (c) 2016 GreenSync Pty Ltd.  All rights reserved.

require_relative '../lib/nats-client'

require 'socket'
Thread.abort_on_exception = true

start_time = Time.now.utc.to_f - 1
messages = 0

connection = NatsClient::Connection.new(
  NatsClient::PooledConnector.new(
    [
      NatsClient::SocketConnector.new('localhost', 4222),
      NatsClient::SocketConnector.new('localhost', 4223)
    ]
  )
)

Thread.new { connection.run! }

if ARGV.first == '--pub'
  loop do
    now = Time.now.utc
    puts messages / (now.to_f - start_time) if messages % 1_000 == 0
    connection.publish!("hello.in", "world\u1235#{now}")
    sleep 1
    messages += 1
  end
else
  Thread.new do
    NatsClient::QueuedMessageStream.new(connection, "hello.>").each do |topic, payload, reply_to|
      puts topic, payload, reply_to
      now = Time.now.utc
#      puts messages / (now.to_f - start_time) if messages % 1_000 == 0
      # connection.publish! "world", "says hello back!", reply_to: "hello.reply" if topic == 'hello.in'
      messages += 1
    end
  end

  Thread.new do
    NatsClient::QueuedMessageStream.new(connection, "world").each do |topic, payload, reply_to|
      puts topic, payload, reply_to

      connection.publish!(reply_to, "my response") if reply_to
    end
  end

  loop do
    puts NatsClient::QueuedRequest.new(connection).request!("world", "my request")
    sleep 1
  end
end
